{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x2A0906Ce6bF8A325eE9C2E1fcd67C36a282e0f97",
    "txHash": "0xd97d67fc9da2f1d715a0e9d0b60d973ee28b70b9a67ec0a33cd191e942ac3561"
  },
  "proxies": [
    {
      "address": "0x2319a14D6C835B32C983A0Fb634bB30780a5DfC6",
      "txHash": "0x232578faa10cf896482501707a68760258be19a43f66cc7b91d825d43104efc3",
      "kind": "transparent"
    }
  ],
  "impls": {
    "f673aae13e49e1ae773c234bb3f6182e9448a931c869a7ce1e7dedc0044f4e09": {
      "address": "0x0991a42679185701c863736793C4bDa76209d143",
      "txHash": "0xfe9559099514d9b4e923a65623c2a586790a407887e252a7f4e8fed06d4c66cb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "MetaSaltToken",
            "label": "nftContract",
            "type": "t_address",
            "src": "../project:/contracts/metasalt.sol:12"
          },
          {
            "contract": "MetaSaltToken",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "../project:/contracts/metasalt.sol:13"
          },
          {
            "contract": "MetaSaltToken",
            "label": "airdropAmount",
            "type": "t_uint256",
            "src": "../project:/contracts/metasalt.sol:14"
          },
          {
            "contract": "MetaSaltToken",
            "label": "airdropVersion",
            "type": "t_uint256",
            "src": "../project:/contracts/metasalt.sol:15"
          },
          {
            "contract": "MetaSaltToken",
            "label": "rewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/metasalt.sol:16"
          },
          {
            "contract": "MetaSaltToken",
            "label": "airdrops",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/metasalt.sol:17"
          },
          {
            "contract": "MetaSaltToken",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/metasalt.sol:83"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    }
  }
}
