{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xF12b5dd4EAD5F743C6BaA640B0216200e89B60Da",
    "txHash": "0x04c0f99e46572979a850ea1ebf1c0f63753e04c5da578a0d4acbeaef2f58613e"
  },
  "proxies": [
    {
      "address": "0x6ff23c9B621AB2fF30f44F3099E10B9f7dd70991",
      "txHash": "0xb538242e72db50412d474220bcdf2d9f165443bbde55174317be57ffcc1e3cf0",
      "kind": "transparent"
    },
    {
      "address": "0x7Aa658bb0d68a73e9e40C76286B7B4CF4E443a64",
      "txHash": "0x4a642045feb614cc919ac2abc0ce550e499caa7abcea3d6d091ad6a436320bfd",
      "kind": "transparent"
    },
    {
      "address": "0xE882c7C116eB23Ea936AD0118DAaaBE28fd1e7a8",
      "txHash": "0x202c9fff499e1b0a1d8dd44881fee9df9e3360093ca434125858d9875fef1cbf",
      "kind": "transparent"
    },
    {
      "address": "0x048c08c7740A25d604C4B57Cd9fF99c09B5d7Cb5",
      "txHash": "0xd9276c45e87d467df03ec65557a98993409d5c0c2d7d7d05d18fbd5f084b251a",
      "kind": "transparent"
    },
    {
      "address": "0x5dB2bc2c0dDDBfbF78326DA021FB786196DC9B70",
      "txHash": "0x48ebf303192e157f13a6164e45af572a3e49e332c8cce782266b73ae17095a0e",
      "kind": "transparent"
    },
    {
      "address": "0xDdDfebBdBEbB8dea96812Ad6f6f3bE3923A830d1",
      "txHash": "0x1313cce38115ce553f0e25d16425aa44becbf76fd876ef52ec30e6cdfe576bd4",
      "kind": "transparent"
    },
    {
      "address": "0x6e2239a29fEb49bB756593202050Ca90da1a6e9E",
      "txHash": "0x3b3a6a5832c7c35d43feffb6db5bfa31a5d0c08066a0f18e6c6f2b4746412d46",
      "kind": "transparent"
    },
    {
      "address": "0x345cA3e014Aaf5dcA488057592ee47305D9B3e10",
      "txHash": "0xbc0d36cf85525edab14477c46d05aa33e4b2e035740f41f5be1808a85c409604",
      "kind": "transparent"
    }
  ],
  "impls": {
    "1a10782c8d7e8b6a1402b54ae768842c5383b48d326c4adb462858c2b38cc26f": {
      "address": "0xaBA21203D7EB37B45F953529Ca0aE14CbE2712e4",
      "txHash": "0x698fdf28657460be465a70d9586a9b1265f4618089bd36e323b76c85eaacc408",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2844_storage)",
            "src": "../project:/contracts/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2221_storage",
            "src": "../project:/contracts/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../project:/contracts/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_burnedTokens",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/ERC721Upgradeable.sol:92"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)40_storage",
            "src": "../project:/contracts/ERC721Upgradeable.sol:494"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/ERC721DefaultApproval.sol:7"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/ERC721DefaultApproval.sol:23"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/ERC721BurnableUpgradeable.sol:40"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "ERC1271Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/Mint721Validator.sol:26"
          },
          {
            "contract": "Mint721Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/Mint721Validator.sol:37"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC721Lazy",
            "label": "creators",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/ERC721Lazy.sol:21"
          },
          {
            "contract": "ERC721Lazy",
            "label": "royaltyFees",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ERC721Lazy.sol:22"
          },
          {
            "contract": "ERC721Lazy",
            "label": "metasaltToken",
            "type": "t_address",
            "src": "../project:/contracts/ERC721Lazy.sol:23"
          },
          {
            "contract": "ERC721Lazy",
            "label": "MetasaltTokenCreateRewardValue",
            "type": "t_uint256",
            "src": "../project:/contracts/ERC721Lazy.sol:24"
          },
          {
            "contract": "ERC721Lazy",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/ERC721Lazy.sol:121"
          },
          {
            "contract": "ERC721Base",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/ERC721Base.sol:26"
          },
          {
            "contract": "ERC721MetaSalt",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/ERC721MetaSalt.sol:25"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(UintSet)2844_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2844_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2458_storage"
              }
            ]
          },
          "t_struct(Set)2458_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2221_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1903_storage"
              }
            ]
          },
          "t_struct(Map)1903_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1895_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)1895_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)1895_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    },
    "9e46ed548c03dc469c9e447b9507608028db694cd859a665ee817066101c99fb": {
      "address": "0x8CdaF0CD259887258Bc13a92C0a6dA92698644C0",
      "txHash": "0xa12822a2b03e31da6a52c93552914e9481c6374d3b196f6885c8ba5cfaae8a4d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/erc-1155/ERC1155Upgradeable.sol:27"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/erc-1155/ERC1155Upgradeable.sol:30"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../project:/contracts/erc-1155/ERC1155Upgradeable.sol:33"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../project:/contracts/erc-1155/ERC1155Upgradeable.sol:421"
          },
          {
            "contract": "ERC1155BaseURI",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../project:/contracts/erc-1155/ERC1155BaseURI.sol:14"
          },
          {
            "contract": "ERC1155BaseURI",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/erc-1155/ERC1155BaseURI.sol:17"
          },
          {
            "contract": "ERC1155BaseURI",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/erc-1155/ERC1155BaseURI.sol:69"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "ERC1271Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/erc-1271/ERC1271Validator.sol:25"
          },
          {
            "contract": "Mint1155Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/erc-1155/Mint1155Validator.sol:16"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC1155DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/erc-1155/ERC1155DefaultApproval.sol:8"
          },
          {
            "contract": "ERC1155DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/erc-1155/ERC1155DefaultApproval.sol:20"
          },
          {
            "contract": "ERC1155BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/erc-1155/ERC1155BurnableUpgradeable.sol:41"
          },
          {
            "contract": "ERC1155Lazy",
            "label": "creators",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/erc-1155/ERC1155Lazy.sol:20"
          },
          {
            "contract": "ERC1155Lazy",
            "label": "royaltyFees",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/erc-1155/ERC1155Lazy.sol:21"
          },
          {
            "contract": "ERC1155Lazy",
            "label": "supply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/erc-1155/ERC1155Lazy.sol:22"
          },
          {
            "contract": "ERC1155Lazy",
            "label": "minted",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/erc-1155/ERC1155Lazy.sol:23"
          },
          {
            "contract": "ERC1155Lazy",
            "label": "metasaltToken",
            "type": "t_address",
            "src": "../project:/contracts/erc-1155/ERC1155Lazy.sol:24"
          },
          {
            "contract": "ERC1155Lazy",
            "label": "MetasaltTokenCreateRewardValue",
            "type": "t_uint256",
            "src": "../project:/contracts/erc-1155/ERC1155Lazy.sol:25"
          },
          {
            "contract": "ERC1155Lazy",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/erc-1155/ERC1155Lazy.sol:177"
          },
          {
            "contract": "ERC1155Base",
            "label": "name",
            "type": "t_string_storage",
            "src": "../project:/contracts/erc-1155/ERC1155Base.sol:12"
          },
          {
            "contract": "ERC1155Base",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/erc-1155/ERC1155Base.sol:13"
          },
          {
            "contract": "ERC1155Base",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/erc-1155/ERC1155Base.sol:81"
          },
          {
            "contract": "ERC1155MetaSalt",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/erc-1155/ERC1155MetaSalt.sol:24"
          }
        ],
        "types": {
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    }
  }
}
