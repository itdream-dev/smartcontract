{
  "contractName": "MetaSaltAuth",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "MetaSaltERC20",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "RequestPrice",
          "type": "uint256"
        }
      ],
      "name": "__MetaSaltAuth_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "WithdrawBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "SetPaymentToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "SetRequestPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"SetPaymentToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"SetRequestPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"WithdrawBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"MetaSaltERC20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"RequestPrice\",\"type\":\"uint256\"}],\"name\":\"__MetaSaltAuth_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/authentication.sol\":\"MetaSaltAuth\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xb419e68addcb82ecda3ad3974b0d2db76435ce9b08435a04d5b119a0c5d45ea5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a85355cc4f2554f4a8d334336d66b48d616abf1d90ec3d6b602e825c6fe63f0c\",\"dweb:/ipfs/QmTJYtsKJjBy3ShAt4kEjvM6nfVS8ZAFQqE29fG16tUP8d\"]},\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":{\"keccak256\":\"0xd8e4eb08dcc1d1860fb347ba5ffd595242b9a1b66d49a47f2b4cb51c3f35017e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbc89479d30592e82442edc38053b380f611037a5e6ceafc7bf57a7aa1f0305\",\"dweb:/ipfs/QmcdYtt56WmjeYvsFjK69FnahnAriw88VzY3XRZwXkQKKN\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xa1931c47a617014f858580db625aa0dcf343796f39acd4b5b51effc092a1f0a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cbeb499bad52667b96dd7df8e9b1f583e8c07afaba0018a75e5b7ff6e777173\",\"dweb:/ipfs/QmPLJnuhEcWnpmhMHKsiuVHVxMwb5k6idYyjajbrtZLz5B\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xfc5ea91fa9ceb1961023b2a6c978b902888c52b90847ac7813fe3b79524165f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b81dcc816857a9d981386f6d8de49198420ee41cdc0ecade366ab412174d03\",\"dweb:/ipfs/QmV2vznMT6m9qo3pFMAWi3Nz3UDhwesgwFxeXe6Tod3v8A\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xbbf8a21b9a66c48d45ff771b8563c6df19ba451d63dfb8380a865c1e1f29d1a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://062688aac76e27ab50157a9d645700cf92e3c0d51d3d860be1d2e1a0c04a87d0\",\"dweb:/ipfs/QmfXxppWAiSTeH8YNn2EtMPDgzrLeJ5rjRq8knEbje88mX\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x73bef0a5dec3efde8183c4858d90f683ed2771656c4329647b4d5b0f89498fd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef58fce3c601850d4137223f8df56635f7fa3691e42bd6e2e296747f821a2540\",\"dweb:/ipfs/QmSiJPHcY399BPDgimEosXzsW38MSXPTCxqT1ibbF4AdoZ\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x46034cd5cca740f636345c8f7aebae0f78adfd4b70e31e6f888cccbe1086586e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b9f36bfde7168be120a14da6c8c54cde5e5df07b79c5239752e07e5fb1ac046\",\"dweb:/ipfs/QmZfEjoDzj3EfBkZB8X9dyBGt81tQ1KmFPuY3cz2yqWQDK\"]},\"project:/contracts/authentication.sol\":{\"keccak256\":\"0xd2bd8bd480e9fbd493fe74b41ae550570041e286e4e0f3fa560c4eb4087594dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45aab49ba923b25291de0fe3f88c032dbb54f6a55a509ec1d50a3518d08640ab\",\"dweb:/ipfs/QmYW1B9ZAY4E4dQyjdnASPWBF8M24QuDaNFHoRcPXRLGHH\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610a11806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063ae83d0db1161005b578063ae83d0db146100dd578063cdf4cd95146100f0578063ecb37ef314610103578063f2fde38b1461011657610088565b80635c975abb1461008d578063715018a6146100ab57806374db4f7e146100b55780638da5cb5b146100c8575b600080fd5b610095610129565b6040516100a2919061095c565b60405180910390f35b6100b3610132565b005b6100b36100c33660046108f4565b6101de565b6100d0610245565b6040516100a29190610924565b6100b36100eb36600461088a565b610254565b6100b36100fe3660046108ab565b6103b6565b6100b361011136600461088a565b610482565b6100b361012436600461088a565b610506565b60975460ff1690565b61013a610609565b6001600160a01b031661014b610245565b6001600160a01b031614610194576040805162461bcd60e51b815260206004820181905260248201526000805160206109bc833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6101e6610609565b6001600160a01b03166101f7610245565b6001600160a01b031614610240576040805162461bcd60e51b815260206004820181905260248201526000805160206109bc833981519152604482015290519081900360640190fd5b60ca55565b6033546001600160a01b031690565b61025c610609565b6001600160a01b031661026d610245565b6001600160a01b0316146102b6576040805162461bcd60e51b815260206004820181905260248201526000805160206109bc833981519152604482015290519081900360640190fd5b60c9546040516370a0823160e01b81526001600160a01b03909116906323b872dd903090849084906370a08231906102f2908590600401610924565b60206040518083038186803b15801561030a57600080fd5b505afa15801561031e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610342919061090c565b6040518463ffffffff1660e01b815260040161036093929190610938565b602060405180830381600087803b15801561037a57600080fd5b505af115801561038e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b291906108d4565b5050565b600054610100900460ff16806103cf57506103cf61060d565b806103dd575060005460ff16155b6104185760405162461bcd60e51b815260040180806020018281038252602e81526020018061098e602e913960400191505060405180910390fd5b600054610100900460ff16158015610443576000805460ff1961ff0019909116610100171660011790555b61044b61061e565b60c980546001600160a01b0319166001600160a01b03851617905560ca829055801561047d576000805461ff00191690555b505050565b61048a610609565b6001600160a01b031661049b610245565b6001600160a01b0316146104e4576040805162461bcd60e51b815260206004820181905260248201526000805160206109bc833981519152604482015290519081900360640190fd5b60c980546001600160a01b0319166001600160a01b0392909216919091179055565b61050e610609565b6001600160a01b031661051f610245565b6001600160a01b031614610568576040805162461bcd60e51b815260206004820181905260248201526000805160206109bc833981519152604482015290519081900360640190fd5b6001600160a01b0381166105ad5760405162461bcd60e51b81526004018080602001828103825260268152602001806109686026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6000610618306106d0565b15905090565b600054610100900460ff1680610637575061063761060d565b80610645575060005460ff16155b6106805760405162461bcd60e51b815260040180806020018281038252602e81526020018061098e602e913960400191505060405180910390fd5b600054610100900460ff161580156106ab576000805460ff1961ff0019909116610100171660011790555b6106b36106da565b6106bb61077a565b80156106cd576000805461ff00191690555b50565b803b15155b919050565b600054610100900460ff16806106f357506106f361060d565b80610701575060005460ff16155b61073c5760405162461bcd60e51b815260040180806020018281038252602e81526020018061098e602e913960400191505060405180910390fd5b600054610100900460ff161580156106bb576000805460ff1961ff00199091166101001716600117905580156106cd576000805461ff001916905550565b600054610100900460ff1680610793575061079361060d565b806107a1575060005460ff16155b6107dc5760405162461bcd60e51b815260040180806020018281038252602e81526020018061098e602e913960400191505060405180910390fd5b600054610100900460ff16158015610807576000805460ff1961ff0019909116610100171660011790555b6000610811610609565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156106cd576000805461ff001916905550565b80356001600160a01b03811681146106d557600080fd5b60006020828403121561089b578081fd5b6108a482610873565b9392505050565b600080604083850312156108bd578081fd5b6108c683610873565b946020939093013593505050565b6000602082840312156108e5578081fd5b815180151581146108a4578182fd5b600060208284031215610905578081fd5b5035919050565b60006020828403121561091d578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b90151581526020019056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65644f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220a5f3f05c8c0b9475febd887e06d0c7b419f88eec7061eb58316a0f20e77f07ac64736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063ae83d0db1161005b578063ae83d0db146100dd578063cdf4cd95146100f0578063ecb37ef314610103578063f2fde38b1461011657610088565b80635c975abb1461008d578063715018a6146100ab57806374db4f7e146100b55780638da5cb5b146100c8575b600080fd5b610095610129565b6040516100a2919061095c565b60405180910390f35b6100b3610132565b005b6100b36100c33660046108f4565b6101de565b6100d0610245565b6040516100a29190610924565b6100b36100eb36600461088a565b610254565b6100b36100fe3660046108ab565b6103b6565b6100b361011136600461088a565b610482565b6100b361012436600461088a565b610506565b60975460ff1690565b61013a610609565b6001600160a01b031661014b610245565b6001600160a01b031614610194576040805162461bcd60e51b815260206004820181905260248201526000805160206109bc833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6101e6610609565b6001600160a01b03166101f7610245565b6001600160a01b031614610240576040805162461bcd60e51b815260206004820181905260248201526000805160206109bc833981519152604482015290519081900360640190fd5b60ca55565b6033546001600160a01b031690565b61025c610609565b6001600160a01b031661026d610245565b6001600160a01b0316146102b6576040805162461bcd60e51b815260206004820181905260248201526000805160206109bc833981519152604482015290519081900360640190fd5b60c9546040516370a0823160e01b81526001600160a01b03909116906323b872dd903090849084906370a08231906102f2908590600401610924565b60206040518083038186803b15801561030a57600080fd5b505afa15801561031e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610342919061090c565b6040518463ffffffff1660e01b815260040161036093929190610938565b602060405180830381600087803b15801561037a57600080fd5b505af115801561038e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b291906108d4565b5050565b600054610100900460ff16806103cf57506103cf61060d565b806103dd575060005460ff16155b6104185760405162461bcd60e51b815260040180806020018281038252602e81526020018061098e602e913960400191505060405180910390fd5b600054610100900460ff16158015610443576000805460ff1961ff0019909116610100171660011790555b61044b61061e565b60c980546001600160a01b0319166001600160a01b03851617905560ca829055801561047d576000805461ff00191690555b505050565b61048a610609565b6001600160a01b031661049b610245565b6001600160a01b0316146104e4576040805162461bcd60e51b815260206004820181905260248201526000805160206109bc833981519152604482015290519081900360640190fd5b60c980546001600160a01b0319166001600160a01b0392909216919091179055565b61050e610609565b6001600160a01b031661051f610245565b6001600160a01b031614610568576040805162461bcd60e51b815260206004820181905260248201526000805160206109bc833981519152604482015290519081900360640190fd5b6001600160a01b0381166105ad5760405162461bcd60e51b81526004018080602001828103825260268152602001806109686026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6000610618306106d0565b15905090565b600054610100900460ff1680610637575061063761060d565b80610645575060005460ff16155b6106805760405162461bcd60e51b815260040180806020018281038252602e81526020018061098e602e913960400191505060405180910390fd5b600054610100900460ff161580156106ab576000805460ff1961ff0019909116610100171660011790555b6106b36106da565b6106bb61077a565b80156106cd576000805461ff00191690555b50565b803b15155b919050565b600054610100900460ff16806106f357506106f361060d565b80610701575060005460ff16155b61073c5760405162461bcd60e51b815260040180806020018281038252602e81526020018061098e602e913960400191505060405180910390fd5b600054610100900460ff161580156106bb576000805460ff1961ff00199091166101001716600117905580156106cd576000805461ff001916905550565b600054610100900460ff1680610793575061079361060d565b806107a1575060005460ff16155b6107dc5760405162461bcd60e51b815260040180806020018281038252602e81526020018061098e602e913960400191505060405180910390fd5b600054610100900460ff16158015610807576000805460ff1961ff0019909116610100171660011790555b6000610811610609565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156106cd576000805461ff001916905550565b80356001600160a01b03811681146106d557600080fd5b60006020828403121561089b578081fd5b6108a482610873565b9392505050565b600080604083850312156108bd578081fd5b6108c683610873565b946020939093013593505050565b6000602082840312156108e5578081fd5b815180151581146108a4578182fd5b600060208284031215610905578081fd5b5035919050565b60006020828403121561091d578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b90151581526020019056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65644f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220a5f3f05c8c0b9475febd887e06d0c7b419f88eec7061eb58316a0f20e77f07ac64736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2141:8",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:8",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:8"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:8",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:8",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:8"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:8"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:8"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:8",
                "type": ""
              }
            ],
            "src": "14:175:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "264:128:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:26:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "319:6:8"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "327:6:8"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "312:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "312:22:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "312:22:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "285:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "294:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "281:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "281:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "306:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "277:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "274:2:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "345:41:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "376:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "355:20:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:31:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "230:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "241:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "253:6:8",
                "type": ""
              }
            ],
            "src": "194:198:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "484:179:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "530:26:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "539:6:8"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "547:6:8"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "532:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "532:22:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "532:22:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "505:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "514:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "501:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "501:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "526:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "497:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "494:2:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "565:41:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "596:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "575:20:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "575:31:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "565:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "615:42:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "642:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "653:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "638:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "638:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "625:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "625:32:8"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "615:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "442:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "453:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "465:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "473:6:8",
                "type": ""
              }
            ],
            "src": "397:266:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "746:219:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "792:26:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "801:6:8"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "809:6:8"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "794:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "794:22:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "794:22:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "767:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "776:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "763:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "763:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "788:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "759:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "759:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "756:2:8"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "827:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "846:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "840:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "840:16:8"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "831:5:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "909:26:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "918:6:8"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "926:6:8"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "911:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "911:22:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "911:22:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "878:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "899:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "892:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "892:13:8"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "885:6:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "885:21:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "875:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "875:32:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "868:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "868:40:8"
                  },
                  "nodeType": "YulIf",
                  "src": "865:2:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "944:15:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "954:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "944:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "712:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "723:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "735:6:8",
                "type": ""
              }
            ],
            "src": "668:297:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1040:120:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1086:26:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1095:6:8"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1103:6:8"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1088:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1088:22:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1088:22:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1061:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1070:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1057:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1057:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1082:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1053:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1053:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1050:2:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1121:33:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1144:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1131:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1131:23:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1121:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1006:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1017:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1029:6:8",
                "type": ""
              }
            ],
            "src": "970:190:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1246:113:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1292:26:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1301:6:8"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1309:6:8"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1294:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1294:22:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1294:22:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1267:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1276:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1263:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1263:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1288:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1259:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1259:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1256:2:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1327:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1343:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1337:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1337:16:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1327:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1212:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1223:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1235:6:8",
                "type": ""
              }
            ],
            "src": "1165:194:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1465:102:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1475:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1487:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1498:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1483:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1483:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1475:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1517:9:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1532:6:8"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1548:3:8",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1553:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1544:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1544:11:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1557:1:8",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1540:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1540:19:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1528:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1528:32:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1510:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1510:51:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1510:51:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1434:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1445:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1456:4:8",
                "type": ""
              }
            ],
            "src": "1364:203:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1729:218:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1739:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1751:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1762:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1747:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1747:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1739:4:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1774:29:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1792:3:8",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1797:1:8",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1788:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1788:11:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1801:1:8",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1784:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1784:19:8"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1778:2:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1819:9:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1834:6:8"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1842:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1830:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1830:15:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1812:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1812:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1812:34:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1866:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1877:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1862:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1862:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1886:6:8"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1894:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1882:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1882:15:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1855:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1855:43:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1855:43:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1918:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1929:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1914:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1914:18:8"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1934:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1907:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1907:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1907:34:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1682:9:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1693:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1701:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1709:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1720:4:8",
                "type": ""
              }
            ],
            "src": "1572:375:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2047:92:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2057:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2069:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2080:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2065:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2065:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2057:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2099:9:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2124:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2117:6:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2117:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2110:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2110:22:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2092:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2092:41:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2092:41:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2016:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2027:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2038:4:8",
                "type": ""
              }
            ],
            "src": "1952:187:8"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n}",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "462:793:7:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "462:793:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1305:84:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1967:145:0;;;:::i;:::-;;1132:89:7;;;;;;:::i;:::-;;:::i;1335:85:0:-;;;:::i;:::-;;;;;;;:::i;856:141:7:-;;;;;;:::i;:::-;;:::i;642:208::-;;;;;;:::i;:::-;;:::i;1003:123::-;;;;;;:::i;:::-;;:::i;2261:240:0:-;;;;;;:::i;:::-;;:::i;1305:84:5:-;1375:7;;;;1305:84;:::o;1967:145:0:-;1558:12;:10;:12::i;:::-;-1:-1:-1;;;;;1547:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1547:23:0;;1539:68;;;;;-1:-1:-1;;;1539:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1539:68:0;;;;;;;;;;;;;;;2057:6:::1;::::0;2036:40:::1;::::0;2073:1:::1;::::0;-1:-1:-1;;;;;2057:6:0::1;::::0;2036:40:::1;::::0;2073:1;;2036:40:::1;2086:6;:19:::0;;-1:-1:-1;;;;;;2086:19:0::1;::::0;;1967:145::o;1132:89:7:-;1558:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1547:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1547:23:0;;1539:68;;;;;-1:-1:-1;;;1539:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1539:68:0;;;;;;;;;;;;;;;1200:5:7::1;:14:::0;1132:89::o;1335:85:0:-;1407:6;;-1:-1:-1;;;;;1407:6:0;1335:85;:::o;856:141:7:-;1558:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1547:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1547:23:0;;1539:68;;;;;-1:-1:-1;;;1539:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1539:68:0;;;;;;;;;;;;;;;921:5:7::1;::::0;959:30:::1;::::0;-1:-1:-1;;;959:30:7;;-1:-1:-1;;;;;921:5:7;;::::1;::::0;:18:::1;::::0;948:4:::1;::::0;955:2;;921:5;;959:15:::1;::::0;:30:::1;::::0;948:4;;959:30:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;856:141:::0;:::o;642:208::-;1512:13:1;;;;;;;;:33;;;1529:16;:14;:16::i;:::-;1512:50;;;-1:-1:-1;1550:12:1;;;;1549:13;1512:50;1504:109;;;;-1:-1:-1;;;1504:109:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;1646:14;1670:98;;;;1704:13;:20;;-1:-1:-1;;;;1704:20:1;;;;;1738:19;1720:4;1738:19;;;1670:98;747:16:7::1;:14;:16::i;:::-;773:5;:40:::0;;-1:-1:-1;;;;;;773:40:7::1;-1:-1:-1::0;;;;;773:40:7;::::1;;::::0;;823:5:::1;:20:::0;;;1790:66:1;;;;1840:5;1824:21;;-1:-1:-1;;1824:21:1;;;1790:66;642:208:7;;;:::o;1003:123::-;1558:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1547:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1547:23:0;;1539:68;;;;;-1:-1:-1;;;1539:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1539:68:0;;;;;;;;;;;;;;;1079:5:7::1;:40:::0;;-1:-1:-1;;;;;;1079:40:7::1;-1:-1:-1::0;;;;;1079:40:7;;;::::1;::::0;;;::::1;::::0;;1003:123::o;2261:240:0:-;1558:12;:10;:12::i;:::-;-1:-1:-1;;;;;1547:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1547:23:0;;1539:68;;;;;-1:-1:-1;;;1539:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1539:68:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;2349:22:0;::::1;2341:73;;;;-1:-1:-1::0;;;2341:73:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2450:6;::::0;2429:38:::1;::::0;-1:-1:-1;;;;;2429:38:0;;::::1;::::0;2450:6:::1;::::0;2429:38:::1;::::0;2450:6:::1;::::0;2429:38:::1;2477:6;:17:::0;;-1:-1:-1;;;;;;2477:17:0::1;-1:-1:-1::0;;;;;2477:17:0;;;::::1;::::0;;;::::1;::::0;;2261:240::o;828:104:4:-;915:10;828:104;:::o;1952:123:1:-;2000:4;2024:44;2062:4;2024:29;:44::i;:::-;2023:45;2016:52;;1952:123;:::o;935:126:0:-;1512:13:1;;;;;;;;:33;;;1529:16;:14;:16::i;:::-;1512:50;;;-1:-1:-1;1550:12:1;;;;1549:13;1512:50;1504:109;;;;-1:-1:-1;;;1504:109:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;1646:14;1670:98;;;;1704:13;:20;;-1:-1:-1;;;;1704:20:1;;;;;1738:19;1720:4;1738:19;;;1670:98;992:26:0::1;:24;:26::i;:::-;1028;:24;:26::i;:::-;1794:14:1::0;1790:66;;;1840:5;1824:21;;-1:-1:-1;;1824:21:1;;;1790:66;935:126:0;:::o;737:413:3:-;1097:20;;1135:8;;737:413;;;;:::o;759:64:4:-;1512:13:1;;;;;;;;:33;;;1529:16;:14;:16::i;:::-;1512:50;;;-1:-1:-1;1550:12:1;;;;1549:13;1512:50;1504:109;;;;-1:-1:-1;;;1504:109:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;1646:14;1670:98;;;;1704:13;:20;;-1:-1:-1;;;;1704:20:1;;;;;1738:19;1720:4;1738:19;;;1794:14;1790:66;;;1840:5;1824:21;;-1:-1:-1;;1824:21:1;;;759:64:4;:::o;1067:192:0:-;1512:13:1;;;;;;;;:33;;;1529:16;:14;:16::i;:::-;1512:50;;;-1:-1:-1;1550:12:1;;;;1549:13;1512:50;1504:109;;;;-1:-1:-1;;;1504:109:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;1646:14;1670:98;;;;1704:13;:20;;-1:-1:-1;;;;1704:20:1;;;;;1738:19;1720:4;1738:19;;;1670:98;1134:17:0::1;1154:12;:10;:12::i;:::-;1176:6;:18:::0;;-1:-1:-1;;;;;;1176:18:0::1;-1:-1:-1::0;;;;;1176:18:0;::::1;::::0;;::::1;::::0;;;1209:43:::1;::::0;1176:18;;-1:-1:-1;1176:18:0;-1:-1:-1;;1209:43:0::1;::::0;-1:-1:-1;;1209:43:0::1;1778:1:1;1794:14:::0;1790:66;;;1840:5;1824:21;;-1:-1:-1;;1824:21:1;;;1067:192:0;:::o;14:175:8:-;84:20;;-1:-1:-1;;;;;133:31:8;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:8:o;397:266::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;653:2;638:18;;;;625:32;;-1:-1:-1;;;484:179:8:o;668:297::-;;788:2;776:9;767:7;763:23;759:32;756:2;;;809:6;801;794:22;756:2;846:9;840:16;899:5;892:13;885:21;878:5;875:32;865:2;;926:6;918;911:22;970:190;;1082:2;1070:9;1061:7;1057:23;1053:32;1050:2;;;1103:6;1095;1088:22;1050:2;-1:-1:-1;1131:23:8;;1040:120;-1:-1:-1;1040:120:8:o;1165:194::-;;1288:2;1276:9;1267:7;1263:23;1259:32;1256:2;;;1309:6;1301;1294:22;1256:2;-1:-1:-1;1337:16:8;;1246:113;-1:-1:-1;1246:113:8:o;1364:203::-;-1:-1:-1;;;;;1528:32:8;;;;1510:51;;1498:2;1483:18;;1465:102::o;1572:375::-;-1:-1:-1;;;;;1830:15:8;;;1812:34;;1882:15;;;;1877:2;1862:18;;1855:43;1929:2;1914:18;;1907:34;;;;1762:2;1747:18;;1729:218::o;1952:187::-;2117:14;;2110:22;2092:41;;2080:2;2065:18;;2047:92::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.6;\npragma abicoder v2;\nimport \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\n\n\ncontract MetaSaltAuth is Initializable, OwnableUpgradeable, ReentrancyGuardUpgradeable, PausableUpgradeable {\n\n    IERC20Upgradeable private token;\n    uint256 private price;\n\n    function __MetaSaltAuth_init(address MetaSaltERC20, uint256 RequestPrice) external initializer {\n        __Ownable_init();\n        token = IERC20Upgradeable(MetaSaltERC20);\n        price = RequestPrice;\n    }\n\n    function WithdrawBalance(address to) external onlyOwner{\n        token.transferFrom(address(this), to, token.balanceOf(address(this)));\n    }\n\n    function SetPaymentToken(address _tokenAddress) external onlyOwner{\n        token = IERC20Upgradeable(_tokenAddress);\n    }\n\n    function SetRequestPrice(uint256 _price) external onlyOwner{\n       price = _price;\n    }\n\n    uint256[50] private __gap;\n}",
  "sourcePath": "/Volumes/Data/MetaSalt/smart_contracts/authentication/contracts/authentication.sol",
  "ast": {
    "absolutePath": "project:/contracts/authentication.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        518
      ],
      "ContextUpgradeable": [
        563
      ],
      "IERC20Upgradeable": [
        274
      ],
      "Initializable": [
        196
      ],
      "MetaSaltAuth": [
        833
      ],
      "OwnableUpgradeable": [
        130
      ],
      "PausableUpgradeable": [
        676
      ],
      "ReentrancyGuardUpgradeable": [
        734
      ]
    },
    "id": 834,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 736,
        "literals": [
          "solidity",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:7"
      },
      {
        "id": 737,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "55:19:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
        "id": 738,
        "nodeType": "ImportDirective",
        "scope": 834,
        "sourceUnit": 197,
        "src": "75:69:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
        "id": 739,
        "nodeType": "ImportDirective",
        "scope": 834,
        "sourceUnit": 735,
        "src": "145:82:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
        "id": 740,
        "nodeType": "ImportDirective",
        "scope": 834,
        "sourceUnit": 677,
        "src": "228:75:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 741,
        "nodeType": "ImportDirective",
        "scope": 834,
        "sourceUnit": 131,
        "src": "304:75:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "id": 742,
        "nodeType": "ImportDirective",
        "scope": 834,
        "sourceUnit": 275,
        "src": "380:79:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 743,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 196,
              "src": "487:13:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$196",
                "typeString": "contract Initializable"
              }
            },
            "id": 744,
            "nodeType": "InheritanceSpecifier",
            "src": "487:13:7"
          },
          {
            "baseName": {
              "id": 745,
              "name": "OwnableUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 130,
              "src": "502:18:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnableUpgradeable_$130",
                "typeString": "contract OwnableUpgradeable"
              }
            },
            "id": 746,
            "nodeType": "InheritanceSpecifier",
            "src": "502:18:7"
          },
          {
            "baseName": {
              "id": 747,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 734,
              "src": "522:26:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReentrancyGuardUpgradeable_$734",
                "typeString": "contract ReentrancyGuardUpgradeable"
              }
            },
            "id": 748,
            "nodeType": "InheritanceSpecifier",
            "src": "522:26:7"
          },
          {
            "baseName": {
              "id": 749,
              "name": "PausableUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 676,
              "src": "550:19:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PausableUpgradeable_$676",
                "typeString": "contract PausableUpgradeable"
              }
            },
            "id": 750,
            "nodeType": "InheritanceSpecifier",
            "src": "550:19:7"
          }
        ],
        "contractDependencies": [
          130,
          196,
          563,
          676,
          734
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 833,
        "linearizedBaseContracts": [
          833,
          676,
          734,
          130,
          563,
          196
        ],
        "name": "MetaSaltAuth",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 752,
            "mutability": "mutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 833,
            "src": "577:31:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20Upgradeable_$274",
              "typeString": "contract IERC20Upgradeable"
            },
            "typeName": {
              "id": 751,
              "name": "IERC20Upgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 274,
              "src": "577:17:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$274",
                "typeString": "contract IERC20Upgradeable"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 754,
            "mutability": "mutable",
            "name": "price",
            "nodeType": "VariableDeclaration",
            "scope": 833,
            "src": "614:21:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 753,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "614:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 776,
              "nodeType": "Block",
              "src": "737:113:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 763,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "747:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "747:16:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 765,
                  "nodeType": "ExpressionStatement",
                  "src": "747:16:7"
                },
                {
                  "expression": {
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 766,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 752,
                      "src": "773:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Upgradeable_$274",
                        "typeString": "contract IERC20Upgradeable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 768,
                          "name": "MetaSaltERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 756,
                          "src": "799:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 767,
                        "name": "IERC20Upgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 274,
                        "src": "781:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$274_$",
                          "typeString": "type(contract IERC20Upgradeable)"
                        }
                      },
                      "id": 769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "781:32:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Upgradeable_$274",
                        "typeString": "contract IERC20Upgradeable"
                      }
                    },
                    "src": "773:40:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$274",
                      "typeString": "contract IERC20Upgradeable"
                    }
                  },
                  "id": 771,
                  "nodeType": "ExpressionStatement",
                  "src": "773:40:7"
                },
                {
                  "expression": {
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 772,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 754,
                      "src": "823:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 773,
                      "name": "RequestPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 758,
                      "src": "831:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "823:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "823:20:7"
                }
              ]
            },
            "functionSelector": "cdf4cd95",
            "id": 777,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 761,
                "modifierName": {
                  "id": 760,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 179,
                  "src": "725:11:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "725:11:7"
              }
            ],
            "name": "__MetaSaltAuth_init",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 756,
                  "mutability": "mutable",
                  "name": "MetaSaltERC20",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "671:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "671:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 758,
                  "mutability": "mutable",
                  "name": "RequestPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "694:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "694:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "670:45:7"
            },
            "returnParameters": {
              "id": 762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "737:0:7"
            },
            "scope": 833,
            "src": "642:208:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 801,
              "nodeType": "Block",
              "src": "911:86:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 789,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "948:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MetaSaltAuth_$833",
                              "typeString": "contract MetaSaltAuth"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MetaSaltAuth_$833",
                              "typeString": "contract MetaSaltAuth"
                            }
                          ],
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "940:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 787,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "940:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "940:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 791,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "955:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 796,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "983:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MetaSaltAuth_$833",
                                  "typeString": "contract MetaSaltAuth"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MetaSaltAuth_$833",
                                  "typeString": "contract MetaSaltAuth"
                                }
                              ],
                              "id": 795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "975:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 794,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "975:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "975:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 792,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 752,
                            "src": "959:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$274",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          },
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 213,
                          "src": "959:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "959:30:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 784,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 752,
                        "src": "921:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$274",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 255,
                      "src": "921:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "921:69:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 800,
                  "nodeType": "ExpressionStatement",
                  "src": "921:69:7"
                }
              ]
            },
            "functionSelector": "ae83d0db",
            "id": 802,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 782,
                "modifierName": {
                  "id": 781,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 75,
                  "src": "902:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "902:9:7"
              }
            ],
            "name": "WithdrawBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 779,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "881:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "880:12:7"
            },
            "returnParameters": {
              "id": 783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "911:0:7"
            },
            "scope": 833,
            "src": "856:141:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 815,
              "nodeType": "Block",
              "src": "1069:57:7",
              "statements": [
                {
                  "expression": {
                    "id": 813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 809,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 752,
                      "src": "1079:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Upgradeable_$274",
                        "typeString": "contract IERC20Upgradeable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 811,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 804,
                          "src": "1105:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 810,
                        "name": "IERC20Upgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 274,
                        "src": "1087:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$274_$",
                          "typeString": "type(contract IERC20Upgradeable)"
                        }
                      },
                      "id": 812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1087:32:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Upgradeable_$274",
                        "typeString": "contract IERC20Upgradeable"
                      }
                    },
                    "src": "1079:40:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$274",
                      "typeString": "contract IERC20Upgradeable"
                    }
                  },
                  "id": 814,
                  "nodeType": "ExpressionStatement",
                  "src": "1079:40:7"
                }
              ]
            },
            "functionSelector": "ecb37ef3",
            "id": 816,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 807,
                "modifierName": {
                  "id": 806,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 75,
                  "src": "1060:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1060:9:7"
              }
            ],
            "name": "SetPaymentToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 804,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 816,
                  "src": "1028:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1028:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1027:23:7"
            },
            "returnParameters": {
              "id": 808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1069:0:7"
            },
            "scope": 833,
            "src": "1003:123:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 827,
              "nodeType": "Block",
              "src": "1191:30:7",
              "statements": [
                {
                  "expression": {
                    "id": 825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 823,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 754,
                      "src": "1200:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 824,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 818,
                      "src": "1208:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1200:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 826,
                  "nodeType": "ExpressionStatement",
                  "src": "1200:14:7"
                }
              ]
            },
            "functionSelector": "74db4f7e",
            "id": 828,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 821,
                "modifierName": {
                  "id": 820,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 75,
                  "src": "1182:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1182:9:7"
              }
            ],
            "name": "SetRequestPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 818,
                  "mutability": "mutable",
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 828,
                  "src": "1157:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1157:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1156:16:7"
            },
            "returnParameters": {
              "id": 822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1191:0:7"
            },
            "scope": 833,
            "src": "1132:89:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "constant": false,
            "id": 832,
            "mutability": "mutable",
            "name": "__gap",
            "nodeType": "VariableDeclaration",
            "scope": 833,
            "src": "1227:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 829,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1227:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 831,
              "length": {
                "hexValue": "3530",
                "id": 830,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1235:2:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1227:11:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 834,
        "src": "462:793:7"
      }
    ],
    "src": "32:1223:7"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/authentication.sol",
      "exportedSymbols": {
        "AddressUpgradeable": [
          518
        ],
        "ContextUpgradeable": [
          563
        ],
        "IERC20Upgradeable": [
          274
        ],
        "Initializable": [
          196
        ],
        "MetaSaltAuth": [
          833
        ],
        "OwnableUpgradeable": [
          130
        ],
        "PausableUpgradeable": [
          676
        ],
        "ReentrancyGuardUpgradeable": [
          734
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.7",
            ".6"
          ]
        },
        "id": 736,
        "name": "PragmaDirective",
        "src": "32:22:7"
      },
      {
        "attributes": {
          "literals": [
            "abicoder",
            "v2"
          ]
        },
        "id": 737,
        "name": "PragmaDirective",
        "src": "55:19:7"
      },
      {
        "attributes": {
          "SourceUnit": 197,
          "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
          "file": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
          "scope": 834,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 738,
        "name": "ImportDirective",
        "src": "75:69:7"
      },
      {
        "attributes": {
          "SourceUnit": 735,
          "absolutePath": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
          "file": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
          "scope": 834,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 739,
        "name": "ImportDirective",
        "src": "145:82:7"
      },
      {
        "attributes": {
          "SourceUnit": 677,
          "absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
          "file": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
          "scope": 834,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 740,
        "name": "ImportDirective",
        "src": "228:75:7"
      },
      {
        "attributes": {
          "SourceUnit": 131,
          "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
          "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
          "scope": 834,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 741,
        "name": "ImportDirective",
        "src": "304:75:7"
      },
      {
        "attributes": {
          "SourceUnit": 275,
          "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
          "file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
          "scope": 834,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 742,
        "name": "ImportDirective",
        "src": "380:79:7"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            130,
            196,
            563,
            676,
            734
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            833,
            676,
            734,
            130,
            563,
            196
          ],
          "name": "MetaSaltAuth",
          "scope": 834
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Initializable",
                  "referencedDeclaration": 196,
                  "type": "contract Initializable"
                },
                "id": 743,
                "name": "UserDefinedTypeName",
                "src": "487:13:7"
              }
            ],
            "id": 744,
            "name": "InheritanceSpecifier",
            "src": "487:13:7"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "OwnableUpgradeable",
                  "referencedDeclaration": 130,
                  "type": "contract OwnableUpgradeable"
                },
                "id": 745,
                "name": "UserDefinedTypeName",
                "src": "502:18:7"
              }
            ],
            "id": 746,
            "name": "InheritanceSpecifier",
            "src": "502:18:7"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ReentrancyGuardUpgradeable",
                  "referencedDeclaration": 734,
                  "type": "contract ReentrancyGuardUpgradeable"
                },
                "id": 747,
                "name": "UserDefinedTypeName",
                "src": "522:26:7"
              }
            ],
            "id": 748,
            "name": "InheritanceSpecifier",
            "src": "522:26:7"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "PausableUpgradeable",
                  "referencedDeclaration": 676,
                  "type": "contract PausableUpgradeable"
                },
                "id": 749,
                "name": "UserDefinedTypeName",
                "src": "550:19:7"
              }
            ],
            "id": 750,
            "name": "InheritanceSpecifier",
            "src": "550:19:7"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "token",
              "scope": 833,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IERC20Upgradeable",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "IERC20Upgradeable",
                  "referencedDeclaration": 274,
                  "type": "contract IERC20Upgradeable"
                },
                "id": 751,
                "name": "UserDefinedTypeName",
                "src": "577:17:7"
              }
            ],
            "id": 752,
            "name": "VariableDeclaration",
            "src": "577:31:7"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "price",
              "scope": 833,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 753,
                "name": "ElementaryTypeName",
                "src": "614:7:7"
              }
            ],
            "id": 754,
            "name": "VariableDeclaration",
            "src": "614:21:7"
          },
          {
            "attributes": {
              "functionSelector": "cdf4cd95",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "__MetaSaltAuth_init",
              "scope": 833,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "MetaSaltERC20",
                      "scope": 777,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 755,
                        "name": "ElementaryTypeName",
                        "src": "671:7:7"
                      }
                    ],
                    "id": 756,
                    "name": "VariableDeclaration",
                    "src": "671:21:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "RequestPrice",
                      "scope": 777,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 757,
                        "name": "ElementaryTypeName",
                        "src": "694:7:7"
                      }
                    ],
                    "id": 758,
                    "name": "VariableDeclaration",
                    "src": "694:20:7"
                  }
                ],
                "id": 759,
                "name": "ParameterList",
                "src": "670:45:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 762,
                "name": "ParameterList",
                "src": "737:0:7"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 179,
                      "type": "modifier ()",
                      "value": "initializer"
                    },
                    "id": 760,
                    "name": "Identifier",
                    "src": "725:11:7"
                  }
                ],
                "id": 761,
                "name": "ModifierInvocation",
                "src": "725:11:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 29,
                              "type": "function ()",
                              "value": "__Ownable_init"
                            },
                            "id": 763,
                            "name": "Identifier",
                            "src": "747:14:7"
                          }
                        ],
                        "id": 764,
                        "name": "FunctionCall",
                        "src": "747:16:7"
                      }
                    ],
                    "id": 765,
                    "name": "ExpressionStatement",
                    "src": "747:16:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IERC20Upgradeable"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 752,
                              "type": "contract IERC20Upgradeable",
                              "value": "token"
                            },
                            "id": 766,
                            "name": "Identifier",
                            "src": "773:5:7"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract IERC20Upgradeable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 274,
                                  "type": "type(contract IERC20Upgradeable)",
                                  "value": "IERC20Upgradeable"
                                },
                                "id": 767,
                                "name": "Identifier",
                                "src": "781:17:7"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 756,
                                  "type": "address",
                                  "value": "MetaSaltERC20"
                                },
                                "id": 768,
                                "name": "Identifier",
                                "src": "799:13:7"
                              }
                            ],
                            "id": 769,
                            "name": "FunctionCall",
                            "src": "781:32:7"
                          }
                        ],
                        "id": 770,
                        "name": "Assignment",
                        "src": "773:40:7"
                      }
                    ],
                    "id": 771,
                    "name": "ExpressionStatement",
                    "src": "773:40:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 754,
                              "type": "uint256",
                              "value": "price"
                            },
                            "id": 772,
                            "name": "Identifier",
                            "src": "823:5:7"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 758,
                              "type": "uint256",
                              "value": "RequestPrice"
                            },
                            "id": 773,
                            "name": "Identifier",
                            "src": "831:12:7"
                          }
                        ],
                        "id": 774,
                        "name": "Assignment",
                        "src": "823:20:7"
                      }
                    ],
                    "id": 775,
                    "name": "ExpressionStatement",
                    "src": "823:20:7"
                  }
                ],
                "id": 776,
                "name": "Block",
                "src": "737:113:7"
              }
            ],
            "id": 777,
            "name": "FunctionDefinition",
            "src": "642:208:7"
          },
          {
            "attributes": {
              "functionSelector": "ae83d0db",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "WithdrawBalance",
              "scope": 833,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 802,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 778,
                        "name": "ElementaryTypeName",
                        "src": "881:7:7"
                      }
                    ],
                    "id": 779,
                    "name": "VariableDeclaration",
                    "src": "881:10:7"
                  }
                ],
                "id": 780,
                "name": "ParameterList",
                "src": "880:12:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 783,
                "name": "ParameterList",
                "src": "911:0:7"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 75,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 781,
                    "name": "Identifier",
                    "src": "902:9:7"
                  }
                ],
                "id": 782,
                "name": "ModifierInvocation",
                "src": "902:9:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transferFrom",
                              "referencedDeclaration": 255,
                              "type": "function (address,address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 752,
                                  "type": "contract IERC20Upgradeable",
                                  "value": "token"
                                },
                                "id": 784,
                                "name": "Identifier",
                                "src": "921:5:7"
                              }
                            ],
                            "id": 786,
                            "name": "MemberAccess",
                            "src": "921:18:7"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_MetaSaltAuth_$833",
                                      "typeString": "contract MetaSaltAuth"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 787,
                                    "name": "ElementaryTypeName",
                                    "src": "940:7:7"
                                  }
                                ],
                                "id": 788,
                                "name": "ElementaryTypeNameExpression",
                                "src": "940:7:7"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967268,
                                  "type": "contract MetaSaltAuth",
                                  "value": "this"
                                },
                                "id": 789,
                                "name": "Identifier",
                                "src": "948:4:7"
                              }
                            ],
                            "id": 790,
                            "name": "FunctionCall",
                            "src": "940:13:7"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 779,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 791,
                            "name": "Identifier",
                            "src": "955:2:7"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "balanceOf",
                                  "referencedDeclaration": 213,
                                  "type": "function (address) view external returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 752,
                                      "type": "contract IERC20Upgradeable",
                                      "value": "token"
                                    },
                                    "id": 792,
                                    "name": "Identifier",
                                    "src": "959:5:7"
                                  }
                                ],
                                "id": 793,
                                "name": "MemberAccess",
                                "src": "959:15:7"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_MetaSaltAuth_$833",
                                          "typeString": "contract MetaSaltAuth"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 794,
                                        "name": "ElementaryTypeName",
                                        "src": "975:7:7"
                                      }
                                    ],
                                    "id": 795,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "975:7:7"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967268,
                                      "type": "contract MetaSaltAuth",
                                      "value": "this"
                                    },
                                    "id": 796,
                                    "name": "Identifier",
                                    "src": "983:4:7"
                                  }
                                ],
                                "id": 797,
                                "name": "FunctionCall",
                                "src": "975:13:7"
                              }
                            ],
                            "id": 798,
                            "name": "FunctionCall",
                            "src": "959:30:7"
                          }
                        ],
                        "id": 799,
                        "name": "FunctionCall",
                        "src": "921:69:7"
                      }
                    ],
                    "id": 800,
                    "name": "ExpressionStatement",
                    "src": "921:69:7"
                  }
                ],
                "id": 801,
                "name": "Block",
                "src": "911:86:7"
              }
            ],
            "id": 802,
            "name": "FunctionDefinition",
            "src": "856:141:7"
          },
          {
            "attributes": {
              "functionSelector": "ecb37ef3",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "SetPaymentToken",
              "scope": 833,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_tokenAddress",
                      "scope": 816,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 803,
                        "name": "ElementaryTypeName",
                        "src": "1028:7:7"
                      }
                    ],
                    "id": 804,
                    "name": "VariableDeclaration",
                    "src": "1028:21:7"
                  }
                ],
                "id": 805,
                "name": "ParameterList",
                "src": "1027:23:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 808,
                "name": "ParameterList",
                "src": "1069:0:7"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 75,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 806,
                    "name": "Identifier",
                    "src": "1060:9:7"
                  }
                ],
                "id": 807,
                "name": "ModifierInvocation",
                "src": "1060:9:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IERC20Upgradeable"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 752,
                              "type": "contract IERC20Upgradeable",
                              "value": "token"
                            },
                            "id": 809,
                            "name": "Identifier",
                            "src": "1079:5:7"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract IERC20Upgradeable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 274,
                                  "type": "type(contract IERC20Upgradeable)",
                                  "value": "IERC20Upgradeable"
                                },
                                "id": 810,
                                "name": "Identifier",
                                "src": "1087:17:7"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 804,
                                  "type": "address",
                                  "value": "_tokenAddress"
                                },
                                "id": 811,
                                "name": "Identifier",
                                "src": "1105:13:7"
                              }
                            ],
                            "id": 812,
                            "name": "FunctionCall",
                            "src": "1087:32:7"
                          }
                        ],
                        "id": 813,
                        "name": "Assignment",
                        "src": "1079:40:7"
                      }
                    ],
                    "id": 814,
                    "name": "ExpressionStatement",
                    "src": "1079:40:7"
                  }
                ],
                "id": 815,
                "name": "Block",
                "src": "1069:57:7"
              }
            ],
            "id": 816,
            "name": "FunctionDefinition",
            "src": "1003:123:7"
          },
          {
            "attributes": {
              "functionSelector": "74db4f7e",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "SetRequestPrice",
              "scope": 833,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_price",
                      "scope": 828,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 817,
                        "name": "ElementaryTypeName",
                        "src": "1157:7:7"
                      }
                    ],
                    "id": 818,
                    "name": "VariableDeclaration",
                    "src": "1157:14:7"
                  }
                ],
                "id": 819,
                "name": "ParameterList",
                "src": "1156:16:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 822,
                "name": "ParameterList",
                "src": "1191:0:7"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 75,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 820,
                    "name": "Identifier",
                    "src": "1182:9:7"
                  }
                ],
                "id": 821,
                "name": "ModifierInvocation",
                "src": "1182:9:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 754,
                              "type": "uint256",
                              "value": "price"
                            },
                            "id": 823,
                            "name": "Identifier",
                            "src": "1200:5:7"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 818,
                              "type": "uint256",
                              "value": "_price"
                            },
                            "id": 824,
                            "name": "Identifier",
                            "src": "1208:6:7"
                          }
                        ],
                        "id": 825,
                        "name": "Assignment",
                        "src": "1200:14:7"
                      }
                    ],
                    "id": 826,
                    "name": "ExpressionStatement",
                    "src": "1200:14:7"
                  }
                ],
                "id": 827,
                "name": "Block",
                "src": "1191:30:7"
              }
            ],
            "id": 828,
            "name": "FunctionDefinition",
            "src": "1132:89:7"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "__gap",
              "scope": 833,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256[50]",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "uint256[50]"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 829,
                    "name": "ElementaryTypeName",
                    "src": "1227:7:7"
                  },
                  {
                    "attributes": {
                      "hexvalue": "3530",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "int_const 50",
                      "value": "50"
                    },
                    "id": 830,
                    "name": "Literal",
                    "src": "1235:2:7"
                  }
                ],
                "id": 831,
                "name": "ArrayTypeName",
                "src": "1227:11:7"
              }
            ],
            "id": 832,
            "name": "VariableDeclaration",
            "src": "1227:25:7"
          }
        ],
        "id": 833,
        "name": "ContractDefinition",
        "src": "462:793:7"
      }
    ],
    "id": 834,
    "name": "SourceUnit",
    "src": "32:1223:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "80001": {
      "events": {},
      "links": {},
      "address": "0xde73090a3Dd8F525442FEb6590F0d63850771Fc2",
      "transactionHash": "0x77fbe4934b099a98d41267090cb566c266c8fbf682924839afe815241c74c59e"
    }
  },
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-06-01T16:40:14.531Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}